# Use the PyTorch base image as it likely includes CUDA
FROM nvcr.io/nvidia/pytorch:23.04-py3
ARG DEBIAN_FRONTEND=noninteractive

# Install dependencies from both Dockerfiles
RUN apt-get update && apt-get install -y \
    git \
    cmake \
    ninja-build \
    build-essential \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-system-dev \
    libboost-test-dev \
    libeigen3-dev \
    libflann-dev \
    libfreeimage-dev \
    libmetis-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    libsqlite3-dev \
    libglew-dev \
    qtbase5-dev \
    libqt5opengl5-dev \
    libcgal-dev \
    libceres-dev \
    xvfb \
    bzip2 \
    ca-certificates \
    curl \
    libx264-dev \
    tmux \
    wget \
    pip \
    ffmpeg

# Install Colmap
RUN git clone https://github.com/colmap/colmap.git && cd colmap && git checkout 3.8
RUN cd colmap && mkdir build && cd build && cmake .. -DCUDA_ENABLED=ON -DCMAKE_CUDA_ARCHITECTURES="70;72;75;80;86" -GNinja
RUN cd colmap/build && ninja && ninja install

# Install Python packages
RUN pip install --upgrade pip
RUN pip install \
    addict \
    k3d \
    opencv-python-headless \
    pillow \
    plotly \
    pyyaml \
    trimesh \
    flake8 \
    pre-commit

# Install Python libraries for Imaginaire
COPY requirements.txt requirements.txt
ARG FORCE_CUDA=1
ARG TCNN_CUDA_ARCHITECTURES=70,72,75,80,86
RUN pip install --upgrade -r requirements.txt
